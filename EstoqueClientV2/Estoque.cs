//------------------------------------------------------------------------------
// <auto-generated>
//     O código foi gerado por uma ferramenta.
//     Versão de Tempo de Execução:4.0.30319.42000
//
//     As alterações ao arquivo poderão causar comportamento incorreto e serão perdidas se
//     o código for gerado novamente.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EstoqueClient.EstoqueService
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://projetoavaliativo.dm113/02", ConfigurationName="EstoqueClient.EstoqueService.IServicoEstoque")]
    public interface IServicoEstoque
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoque/AdicionarEstoque", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoque/AdicionarEstoqueResponse")]
        bool AdicionarEstoque(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoque/AdicionarEstoque", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoque/AdicionarEstoqueResponse")]
        System.Threading.Tasks.Task<bool> AdicionarEstoqueAsync(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoque/RemoverEstoque", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoque/RemoverEstoqueResponse")]
        bool RemoverEstoque(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoque/RemoverEstoque", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoque/RemoverEstoqueResponse")]
        System.Threading.Tasks.Task<bool> RemoverEstoqueAsync(string numeroProduto, int quantidade);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoque/ConsultarEstoque", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoque/ConsultarEstoqueResponse")]
        int ConsultarEstoque(string numeroProduto);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://projetoavaliativo.dm113/02/IServicoEstoque/ConsultarEstoque", ReplyAction="http://projetoavaliativo.dm113/02/IServicoEstoque/ConsultarEstoqueResponse")]
        System.Threading.Tasks.Task<int> ConsultarEstoqueAsync(string numeroProduto);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicoEstoqueChannel : EstoqueClient.EstoqueService.IServicoEstoque, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicoEstoqueClient : System.ServiceModel.ClientBase<EstoqueClient.EstoqueService.IServicoEstoque>, EstoqueClient.EstoqueService.IServicoEstoque
    {
        
        public ServicoEstoqueClient()
        {
        }
        
        public ServicoEstoqueClient(string endpointConfigurationName) : 
                base(endpointConfigurationName)
        {
        }
        
        public ServicoEstoqueClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ServicoEstoqueClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress)
        {
        }
        
        public ServicoEstoqueClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public bool AdicionarEstoque(string numeroProduto, int quantidade)
        {
            return base.Channel.AdicionarEstoque(numeroProduto, quantidade);
        }
        
        public System.Threading.Tasks.Task<bool> AdicionarEstoqueAsync(string numeroProduto, int quantidade)
        {
            return base.Channel.AdicionarEstoqueAsync(numeroProduto, quantidade);
        }
        
        public bool RemoverEstoque(string numeroProduto, int quantidade)
        {
            return base.Channel.RemoverEstoque(numeroProduto, quantidade);
        }
        
        public System.Threading.Tasks.Task<bool> RemoverEstoqueAsync(string numeroProduto, int quantidade)
        {
            return base.Channel.RemoverEstoqueAsync(numeroProduto, quantidade);
        }
        
        public int ConsultarEstoque(string numeroProduto)
        {
            return base.Channel.ConsultarEstoque(numeroProduto);
        }
        
        public System.Threading.Tasks.Task<int> ConsultarEstoqueAsync(string numeroProduto)
        {
            return base.Channel.ConsultarEstoqueAsync(numeroProduto);
        }
    }
}
